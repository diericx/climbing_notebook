// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TrainingEvent {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @map("created_at")
  date          DateTime
  label         String
  amount        Int
  amountUnit    String   @map("amount_unit")
  pointsPerUnit Int      @map("points_per_unit")
  type          String
  ownerId       Int      @map("owner_id")
  owner         User     @relation(fields: [ownerId], references: [id])

  @@map("training_event")
}

model ExerciseEvent {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @map("created_at")
  date       DateTime
  name       String
  weight     Int
  difficulty Int
  notes      String

  ownerId Int  @map("owner_id")
  owner   User @relation(fields: [ownerId], references: [id])

  @@map("exercise_event")
}

model JournalEntry {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @map("created_at")
  date      DateTime
  type      String
  content   String
  ownerId   Int      @map("owner_id")
  owner     User     @relation(fields: [ownerId], references: [id])

  @@map("journal_entry")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique

  // Prisma Required
  provider_id     String          @unique
  hashed_password String?
  // session         Session[]
  TrainingEvent   TrainingEvent[]
  Session         Session[]
  JournalEntry    JournalEntry[]
  ExerciseEvents  ExerciseEvent[]

  @@map("user")
}

// Maybe not required?
model Session {
  id           String @id @unique
  user_id      Int
  expires      BigInt
  idle_expires BigInt
  user         User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}
