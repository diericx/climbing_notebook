services:
  {{ .name }}:
    image: {{ .image }}
    restart: always
    networks:
      - traefik
      - postgres
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.{{ .name }}.rule=Host(\`{{ .host }}\`)'
      - 'traefik.http.routers.{{ .name }}.entrypoints=websecure'
      - 'traefik.http.routers.{{ .name }}.tls.certresolver=letsencrypt'
      - 'traefik.http.services.{{ .name }}.loadbalancer.server.port=3000'
    secrets:
      - source: {{ .db_url_secret }}
        target: db_url
      - cn_prod_aws_access_key_id
      - cn_prod_aws_secret_access_key
    entrypoint:
      [
        '/bin/sh',
        '-c',
        'export BODY_SIZE_LIMIT=5000000; export DATABASE_URL=\$\$(cat /run/secrets/db_url) ; export AWS_ACCESS_KEY_ID=\$\$(cat /run/secrets/cn_prod_aws_access_key_id) ; export AWS_SECRET_ACCESS_KEY=\$\$(cat /run/secrets/cn_prod_aws_secret_access_key) ;node build',
      ]


secrets:
  cn_staging_db_url:
    file: /etc/secrets/cn_staging_db_url.txt
  cn_prod_db_url:
    file: /etc/secrets/cn_prod_db_url.txt
  cn_prod_aws_access_key_id:
    file: /etc/secrets/cn_prod_aws_access_key_id.txt
  cn_prod_aws_secret_access_key:
    file: /etc/secrets/cn_prod_aws_secret_access_key.txt

networks:
  traefik:
    external: true
  postgres:
    external: true
