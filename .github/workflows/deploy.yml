name: Deploy to ECR

on:
 
  push:
    branches: [ master ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
   
    steps:

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: climbingnotebook
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags:
          - $ECR_REGISTRY/$ECR_REPOSITORY:latest
          - $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA
        cache-from: type=registry,ref=user/app:buildcache
        cache-to: type=registry,ref=user/app:buildcache,mode=max

    - name: Deploy to Docker swarm
      uses: wshihadeh/docker-deployment-action@v1
      with:
        remote_docker_host: root@49.13.1.120
        ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
        ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
        deployment_mode: docker-swarm
        copy_stack_file: true
        deploy_path: /root/cn
        stack_file_name: docker-compose.yml
        keep_files: 5
        args: cn
