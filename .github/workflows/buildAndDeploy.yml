name: Build And Deploy

on:
  push:
    branches: [master]
    tags: v[0-9]+.[0-9]+.[0-9]+

jobs:
  build:
    name: Build Docker Image
    runs-on: self-hosted

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ steps.login-ecr.outputs.registry }}/climbingnotebook
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

  deploy-prod:
    name: Deploy Prod
    runs-on: self-hosted
    needs: build
    if: startsWith( github.ref, 'refs/tags/')
    steps:
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Render template
        id: render_template
        uses: chuhlomin/render-template@v1.7
        with:
          template: docker-compose.yml.template
          vars: |
            image: 279721711046.dkr.ecr.us-west-2.amazonaws.com/climbingnotebook:sha-${{ steps.vars.outputs.sha_short }}
            host: climbingnotebook.com
            db_url_secret: cn_prod_db_url
            name: prod

      - name: run commands to deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker container prune -f ; docker image prune -f -a ; echo "${{ steps.render_template.outputs.result }}" | docker stack deploy --with-registry-auth --resolve-image always -c - cn

  deploy-staging:
    name: Deploy Staging
    runs-on: self-hosted
    needs: build
    if: startsWith( github.ref, 'refs/heads/')
    steps:
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Render template
        id: render_template
        uses: chuhlomin/render-template@v1.7
        with:
          template: docker-compose.yml.template
          vars: |
            image: 279721711046.dkr.ecr.us-west-2.amazonaws.com/climbingnotebook:sha-${{ steps.vars.outputs.sha_short }}
            host: staging.climbingnotebook.com
            db_url_secret: cn_staging_db_url
            name: staging

      - name: run commands to deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker container prune -f ; docker image prune -f -a ; echo "${{ steps.render_template.outputs.result }}" | docker stack deploy --with-registry-auth --resolve-image always -c - cn
